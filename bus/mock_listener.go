package bus

import (
	mock "github.com/stretchr/testify/mock"
)

// Listener is an autogenerated mock type for the Listener type
type MockListener struct {
	mock.Mock
}

// Handle provides a mock function with given fields: event
func (_m *MockListener) Handle(event Event) {
	_m.Called(event)
}

type NewMockListenerT interface {
	mock.TestingT
	Cleanup(func())
}

// NewListener creates a new instance of Listener. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMockListener(t NewMockListenerT) *MockListener {
	mock := &MockListener{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
